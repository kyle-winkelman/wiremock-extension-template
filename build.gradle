buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'idea'
    id 'signing'
    id 'maven-publish'
    id 'jacoco'
    id 'com.diffplug.spotless' version '6.22.0'
    id 'com.palantir.git-version' version '3.0.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

wrapper {
    gradleVersion = '8.2.1'
    distributionType = Wrapper.DistributionType.BIN
}

project.ext {
    baseArtifact = 'wiremock-extension-template'
    versions = [
            wiremock  : '3.2.0',
            handlebars: '4.3.1',
            junit     : '5.10.0',
            assertj   : '3.24.2',
            restAssured: '5.3.2',
            awaitility: '4.2.0'
    ]
}

project.archivesBaseName = "${baseArtifact}"
configurations {
    standaloneOnly
}

jar {
    archiveBaseName.set("${baseArtifact}")
    exclude 'META-INF/services'
}

shadowJar {
    archiveBaseName.set("${baseArtifact}-standalone")
    archiveClassifier.set('')
    configurations = [
            project.configurations.runtimeClasspath,
            project.configurations.standaloneOnly
    ]

    with copySpec {
        from("shadowjar/resources") {}
    }

    relocate "com.github.jknack", 'wiremock.com.github.jknack'


    dependencies {
        exclude(dependency('junit:junit'))
    }

    mergeServiceFiles()

    exclude 'META-INF/maven/**'
    exclude 'module-info.class'
    exclude 'handlebars-*.js'
}

group 'org.wiremock'

version gitVersion()

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/wiremock/wiremock-extension-template"
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }

    getComponents().withType(AdhocComponentWithVariants).each { c ->
        c.withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
            skip()
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = "${baseArtifact}"

            from components.java

            pom {
                name = "${baseArtifact}"
                description = 'A Template to create new WireMock extensions'
                url = 'https://github.com/wiremock/wiremock-extension-template'


                scm {
                    connection = 'https://github.com/wiremock/wiremock-extension-template.git'
                    developerConnection = 'https://github.com/wiremock/wiremock-extension-template.git'
                    url = 'https://github.com/wiremock/wiremock-extension-template.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'dirkbolte'
                        name = 'Dirk Bolte'
                        email = 'dirk.bolte@gmx.de'
                    }
                }
            }
        }
        standaloneJar(MavenPublication) { publication ->
            artifactId = "${baseArtifact}-standalone"

            project.shadow.component(publication)

            pom {

                name = "${baseArtifact}-standalone"
                description = 'A Template to create new WireMock extensions - to be used with WireMock standalone'
                url = 'A Template to create new WireMock extensions'


                scm {
                    connection = 'A Template to create new WireMock extensions.git'
                    developerConnection = 'A Template to create new WireMock extensions.git'
                    url = 'A Template to create new WireMock extensions.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'dirkbolte'
                        name = 'Dirk Bolte'
                        email = 'dirk.bolte@gmx.de'
                    }
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation("org.wiremock:wiremock:${versions.wiremock}")
    implementation("com.github.jknack:handlebars-helpers:${versions.handlebars}") {
        exclude group: 'org.mozilla', module: 'rhino'
    }

    testImplementation(platform("org.junit:junit-bom:${versions.junit}"))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation("org.assertj:assertj-core:${versions.assertj}")
    testImplementation(platform("io.rest-assured:rest-assured-bom:${versions.restAssured}"))
    testImplementation("io.rest-assured:rest-assured")
    testImplementation("org.awaitility:awaitility:${versions.awaitility}")
}


sourceCompatibility = 11
targetCompatibility = 11

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
assemble.dependsOn jar, shadowJar

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

idea {
    project {
        jdkName = '11'
        languageLevel = '11'
    }
}

